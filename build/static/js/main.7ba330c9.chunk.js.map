{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","href","MarvelService","_createClass","_this","_classCallCheck","_apiBase","_apiKey","_baseOffset","getResource","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","res","wrap","_context","prev","next","fetch","sent","ok","Error","concat","status","json","abrupt","stop","_x","apply","arguments","getAllCharacters","_callee2","offset","_args2","_context2","length","undefined","data","results","map","_transformCharacter","getCharacter","_ref3","_callee3","id","_context3","_x2","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","RandomChar","_Component","_inherits","_super","_createSuper","_len","args","Array","_key","call","state","loading","error","marvelService","onCharLoaded","setState","onError","onCharLoading","updateChar","Math","floor","random","then","catch","key","value","this","_this$state","errorMessage","spinner","content","View","onClick","mjolnir","Component","imgStyle","indexOf","CharList","charList","newItemLoading","charEnded","onCharListLoaded","newCharList","ended","_toConsumableArray","onRequest","onCharListLoading","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","_this2","i","tabIndex","props","onCharSelected","onKeyDown","e","preventDefault","_this3","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","prevProps","skeleton","ErrorBoundary","errorInfo","console","log","App","selectedChar","decoration","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ba330c9.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=313e75bdb37697fd949748e08a9a160b';\n    _baseOffset = 210;\n\n\n    \n    getResource = async (url) => {\n        let res = await fetch(url);\n    \n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n    \n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? (char.description.length > 210 ? `${char.description.slice(0, 210)}...` : char.description) : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n}\n\nexport default MarvelService;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    marvelService = new MarvelService();\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false,\n            error: false\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true,\n            error: false\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400  - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    \n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    const imgStyle = {\n        objectFit: 'cover'\n    };\n\n    if (thumbnail.indexOf('image_not_available') !== -1) {\n        imgStyle.objectFit = 'contain';\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} style={imgStyle} alt=\"Random character\" className=\"randomchar__img\"/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport './charList.scss';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 1541,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            error: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n    \n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService\n            .getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError);\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = {objectFit: 'cover'};\n\n            if (item.thumbnail.indexOf('image_not_available') !== -1) {\n                imgStyle.objectFit = 'contain';\n            }\n\n            return (\n                <li \n                    className=\"char__item\" \n                    key={item.id}\n                    tabIndex={0}\n                    ref={this.setRef}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(i)\n                    }}\n                    onKeyDown={(e) => {\n                        if (e.key === ' ') e.preventDefault();\n                        if (e.key === ' ' || e.key === 'Enter') {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                        }\n                    }}>\n                    <img src={item.thumbnail} style={imgStyle} alt={item.name + ' image'}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}   \n            </ul>\n        )\n    }\n\n    render() {\n        const {loading, error, charList, newItemLoading, offset, charEnded} = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false,\n            error: false\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true,\n            error: false\n        })\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/>; \n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    const imgStyle = {objectFit: 'cover'};\n\n    if (thumbnail.indexOf('image_not_available') !== -1) {\n        imgStyle.objectFit = 'contain';\n    }\n\n    let content = 'There are no comics with this character';\n\n    if (comics.length !== 0) {\n        content = comics.map((item, i) => {\n            return (\n                <li key={i} className=\"char__comics-item\">\n                    {item.name}\n                </li>\n            )\n        }).slice(0,10);\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} style={imgStyle} alt={name}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {content}\n            </ul>\n        </>\n    );\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    static getDerivedStateFromError(error) {\n        return {error: true};\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}